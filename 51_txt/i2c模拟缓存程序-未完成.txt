  #include"stm32f10x.h"
  void USART_gpio_init();//led灯的gpio函数的声明 
  void USART_Config();
  void Rcc_Configuration();
  void I2C_Init();
  void I2C_SDA_out();
  void I2C_SDA_in();
  void delay_us();
  void I2C_Read_Byte();
  void I2C_Start();
    void main()
{  
  Rcc_Configuration();
  
  
}    
    void delay_us(int k)
     {
       while(k--);
     }
     void I2C_Start()//起始信号
     {
       I2C_SDA_out();//设置为输出
       GPIO_SetBits(GPIOB, GPIO_Pin_7);
       GPIO_SetBits(GPIOB, GPIO_Pin_6);//初始时都为高电平
       delay_us(5);
       GPIO_ResetBits(GPIOB, GPIO_Pin_7);//低电平
       delay_us(6);
       GPIO_ResetBits(GPIOB, GPIO_Pin_6);//低电平
       
     }
     void I2C_Stop()//终止信号
     {
       I2C_SDA_out();//设置为输出
       GPIO_ResetBits(GPIOB, GPIO_Pin_6);//低电平
       GPIO_ResetBits(GPIOB, GPIO_Pin_7);//低电平
       GPIO_SetBits(GPIOB, GPIO_Pin_6);//初始时都为高电平
       delay_us(6);
       GPIO_SetBits(GPIOB, GPIO_Pin_7);
        delay_us(6);
     }
     void I2C_ACK()//主机产生应答信号
     {
       I2C_SDA_out();//设置为输出
       GPIO_ResetBits(GPIOB, GPIO_Pin_6);//低电平
       GPIO_ResetBits(GPIOB, GPIO_Pin_7);//低电平
       delay_us(2);
       GPIO_SetBits(GPIOB, GPIO_Pin_6);//初始时都为高电平
       delay_us(5);
       GPIO_ResetBits(GPIOB, GPIO_Pin_6);//低电平 
     }
     void I2C_NACK()//主机不产生应答信号
     {
       I2C_SDA_out();//设置为输出
       GPIO_ResetBits(GPIOB, GPIO_Pin_6);//低电平
       GPIO_SetBits(GPIOB, GPIO_Pin_7);//初始时都为高电平
       delay_us(2);
       GPIO_SetBits(GPIOB, GPIO_Pin_6);//初始时都为高电平
       delay_us(5);
       GPIO_ResetBits(GPIOB, GPIO_Pin_6);//低电平 
     }
    //如果返回值为1，那就是错误
               //0，等待成功
    u8 I2C_Wait_ACK()//等待从机应答信号
    {
      u8 count=0;
      I2C_SDA_in;
      GPIO_SetBits(GPIOB, GPIO_Pin_7);
      delay_us(2);
      GPIO_SetBits(GPIOB, GPIO_Pin_6);
      delay_us(2);
      
      while(GPIO_ReadInputDataBit(GPIOB, GPIO_Pin_7))
      {
        count++;
        if(count>=250)
        {
          I2C_Stop();
          return 1;
        }
      }
      GPIO_ResetBits(GPIOB, GPIO_Pin_6);
      return 0;
    }
     void I2C_Send_Byte(u8 txd)//i2c发送一个字节函数
    {
      int i=0;
      I2C_SDA_out();
      GPIO_ResetBits(GPIOB, GPIO_Pin_6);
      for(i=0;i<8;i++)
      {
        if((txd&0x80)>0)
          GPIO_SetBits(GPIOB, GPIO_Pin_7);
        else          
          GPIO_ResetBits(GPIOB, GPIO_Pin_7);
          txd<<=1;
          GPIO_SetBits(GPIOB, GPIO_Pin_6);
          delay_us(2);
          GPIO_ResetBits(GPIOB, GPIO_Pin_6);
          delay_us(2);
      }
    }
    void I2C_Read_Byte(u8 ack)
    {
      int i=0;
      u8 receive=0;
      I2C_SDA_in();
      for(i=0;i<8;i++)
      {
         GPIO_ResetBits(GPIOB, GPIO_Pin_6);
          delay_us(2);
          GPIO_SetBits(GPIOB, GPIO_Pin_6);
          receive<<=1;
          if(GPIO_ReadInputDataBit(GPIOB, GPIO_Pin_7))
          {
            receive++;
            delay_us(2);
          }
          
      }
      if(ack==0)
        I2C_NACK();
      else
        I2C_ACK();
      return receive;
    }
     void I2C_SDA_out()
     {
       //定义pb6为scl引脚
       GPIO_InitTypeDef GPIO_InitStructure;//定义结构体    
       GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;//定义引脚速度
       GPIO_InitStructure.GPIO_Pin=GPIO_Pin_7;//定义引脚
       GPIO_InitStructure.GPIO_Mode=GPIO_Mode_Out_PP;//定义输出模式
       GPIO_Init(GPIOB,&GPIO_InitStructure);//初始化
     }
    void I2C_SDA_in()
     {
       //定义pb6为scl引脚
       GPIO_InitTypeDef GPIO_InitStructure;//定义结构体    
       GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;//定义引脚速度
       GPIO_InitStructure.GPIO_Pin=GPIO_Pin_7;//定义引脚
       GPIO_InitStructure.GPIO_Mode=GPIO_Mode_IPU;//定义输出模式
       GPIO_Init(GPIOB,&GPIO_InitStructure);//初始化
     }
     void I2C_Init()
     {
       //定义pb6为scl引脚
       GPIO_InitTypeDef GPIO_InitStructure;//定义结构体    
       GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;//定义引脚速度
       GPIO_InitStructure.GPIO_Pin=GPIO_Pin_6;//定义引脚
       GPIO_InitStructure.GPIO_Mode=GPIO_Mode_Out_PP;//定义输出模式
       GPIO_Init(GPIOB,&GPIO_InitStructure);//初始化
       //定义pb7为sda引脚
       GPIO_InitTypeDef GPIO_InitStructure;//定义结构体    
       GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;//定义引脚速度
       GPIO_InitStructure.GPIO_Pin=GPIO_Pin_7;//定义引脚
       GPIO_InitStructure.GPIO_Mode=GPIO_Mode_Out_PP;//定义输出模式
       GPIO_Init(GPIOB,&GPIO_InitStructure);//初始化
       
       GPIO_SetBits(GPIOB, GPIO_Pin_7);
       GPIO_SetBits(GPIOB, GPIO_Pin_6);
       //GPIO_ResetBits(GPIOB, GPIO_Pin_);
       
     }
     void Rcc_Configuration()
     {
       SystemInit();
       RCC_APB2PeriphClockCmd( RCC_APB2Periph_AFIO,ENABLE);//外部复用功能时钟
       RCC_APB2PeriphClockCmd( RCC_APB2Periph_GPIOA,ENABLE);/*使能a口gpio的rcc时钟*/
       RCC_APB2PeriphClockCmd( RCC_APB2Periph_GPIOB,ENABLE);/*使能a口gpio的rcc时钟*/
       RCC_APB2PeriphClockCmd(RCC_APB2Periph_USART1,ENABLE);//开启串口时钟

       //RCC_APB2PeriphClockCmd(RCC_APB2Periph_USART1,ENABLE);
     }
     
    void USART_gpio_init()
{      
       /////////////////配置usart引脚///////////////
  
       GPIO_InitTypeDef GPIO_InitStructure;//定义结构体
       //pa9为ua1的tx端  
       GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;//定义引脚速度
       GPIO_InitStructure.GPIO_Pin=GPIO_Pin_9;//定义引脚
       GPIO_InitStructure.GPIO_Mode=GPIO_Mode_AF_PP;//定义输出模式
       GPIO_Init(GPIOA,&GPIO_InitStructure);//初始化
       //pa10为ua1的rx端
       GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;//定义引脚速度
       GPIO_InitStructure.GPIO_Pin=GPIO_Pin_10;//定义引脚
       GPIO_InitStructure.GPIO_Mode=GPIO_Mode_IN_FLOATING;//定义输出模式
       GPIO_Init(GPIOA,&GPIO_InitStructure);//初始化
       //////////////////////配置spi引脚////////////////
       
       //pa4为spi1的NSS引脚,片选功能
       GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;//定义引脚速度
       GPIO_InitStructure.GPIO_Pin=GPIO_Pin_4;//定义引脚
       GPIO_InitStructure.GPIO_Mode=GPIO_Mode_Out_PP;//定义输出模式
       GPIO_Init(GPIOA,&GPIO_InitStructure);//初始化      
       //pa5为spi1的sck引脚
       GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;//定义引脚速度
       GPIO_InitStructure.GPIO_Pin=GPIO_Pin_5;//定义引脚
       GPIO_InitStructure.GPIO_Mode=GPIO_Mode_AF_PP;//定义输出模式
       GPIO_Init(GPIOA,&GPIO_InitStructure);//初始化
       //pa6为spi1的miso引脚
       GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;//定义引脚速度
       GPIO_InitStructure.GPIO_Pin=GPIO_Pin_6;//定义引脚
       GPIO_InitStructure.GPIO_Mode=GPIO_Mode_IN_FLOATING;//定义输出模式
       GPIO_Init(GPIOA,&GPIO_InitStructure);//初始化
       //pa7为spi1的mosi引脚
       GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;//定义引脚速度
       GPIO_InitStructure.GPIO_Pin=GPIO_Pin_7;//定义引脚
       GPIO_InitStructure.GPIO_Mode=GPIO_Mode_AF_PP;//定义输出模式
       GPIO_Init(GPIOA,&GPIO_InitStructure);//初始化
       
       
}
  
   void USART_Config()
   {
    
    USART_InitTypeDef USART_InitStructure;
    USART_InitStructure.USART_BaudRate = 115200;
    USART_InitStructure.USART_WordLength = USART_WordLength_8b;
    USART_InitStructure.USART_StopBits = USART_StopBits_1;
    USART_InitStructure.USART_Parity = USART_Parity_No;//无奇偶校验位
    USART_InitStructure.USART_HardwareFlowControl = USART_HardwareFlowControl_None;//无硬件流
    USART_InitStructure.USART_Mode = USART_Mode_Rx | USART_Mode_Tx;//发送接收使能
    USART_Init(USART1,&USART_InitStructure);  
    //USART_ITConfig(USART1,USART_IT_RXNE,ENABLE);//使能接收中断
    //USART_ITConfig(USART1,USART_IT_TXE,ENABLE);//使能发送中断
    USART_Cmd(USART1,ENABLE);//使能外设
   }
  